<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>JX_UIToolbar_Getter</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>- (UIToolbar *)&lt;#ToolBarName#&gt;
{
    if (!_&lt;#ToolBarName#&gt;)
    {
        _&lt;#ToolBarName#&gt; = [[UIToolbar alloc] initWithFrame:CGRectMake(0, 0, 100, 49)];
        //_&lt;#ToolBarName#&gt;.barTintColor = [UIColor redColor];
        //_&lt;#ToolBarName#&gt;.barStyle = UIBarStyleBlackTranslucent;
        //_&lt;#ToolBarName#&gt;.barTintColor = nil;
        //[_&lt;#ToolBarName#&gt; setBackgroundImage:nil forToolbarPosition:UIToolbarPositionAny barMetrics:UIBarMetricsDefault];
        //[_&lt;#ToolBarName#&gt; setBackgroundImage:nil forToolbarPosition:UIToolbarPositionAny barMetrics:UIBarMetricsLandscapePhone];
        //_&lt;#ToolBarName#&gt;.barStyle = UIBarStyleBlackTranslucent;
        //_&lt;#ToolBarName#&gt;.autoresizingMask = UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleWidth;
        
        UIBarButtonItem *itemspace0 = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                                                                    target:self
                                                                                    action:nil];
        itemspace0.width = 20;
        UIBarButtonItem *itemDone = [[UIBarButtonItem alloc] initWithTitle:@"确定"
                                                                     style:UIBarButtonItemStyleBordered
                                                                    target:self
                                                                    action:@selector(pickerDone)];
        UIBarButtonItem *itemspace1 = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace
                                                                                    target:self
                                                                                    action:nil];
        
        UIBarButtonItem *itemCancel = [[UIBarButtonItem alloc] initWithTitle:@"取消"
                                                                       style:UIBarButtonItemStyleBordered
                                                                      target:self
                                                                      action:@selector(pickerCancel)];
        UIBarButtonItem *itemspace2 = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                                                                    target:self
                                                                                    action:nil];
        itemspace2.width = 20;
        [_&lt;#ToolBarName#&gt; setItems:@[itemspace0,itemCancel,itemspace1,itemDone,itemspace2]];
    }
    return _&lt;#ToolBarName#&gt;;
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>7F2434C3-6C7F-494E-94A1-822EA7F1320A</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetTitle</key>
	<string>JX_UIToolbar_Getter</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
